name: cd test

on:
  push:
    branches: [test]

jobs:
  deploy-db-test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy Postgres Test DB on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "📦 Creating test DB volume"
            docker volume create cesizen-db-test || true

            echo "🛑 Restarting test Postgres..."
            docker stop cesizen-postgres-test || true
            docker rm cesizen-postgres-test || true

            echo "🐘 Starting test Postgres..."
            docker run -d \
              --name cesizen-postgres-test \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=postgres \
              -e POSTGRES_DB=cesizen_test \
              -v cesizen-db-test:/var/lib/postgresql/data \
              -p 5433:5432 \
              postgres:15

            echo "🕐 Waiting for Postgres test DB..."
            sleep 10
          EOF

  deploy-api-test:
    needs: deploy-db-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy API Test via PM2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🧹 Killing old PM2 API test process"
            pm2 delete cesizen-api-test || true

            echo "📁 Cloning/Updating repo for API"
            cd ~/cesizen-test || git clone -b test https://github.com/${{ github.repository }} ~/cesizen-test && cd ~/cesizen-test
            git pull origin test

            echo "📦 Installing API deps"
            cd API
            npm install
            npx prisma generate

            echo "🛠 Running migrations"
            DATABASE_URL=postgresql://postgres:postgres@localhost:5433/cesizen_test JWT_SECRET=test-secret npx prisma migrate deploy

            echo "📦 Building API"
            npm run build

            echo "🚀 Starting API test with PM2"
            DATABASE_URL=postgresql://postgres:postgres@localhost:5433/cesizen_test JWT_SECRET=test-secret pm2 start dist/server.js --name cesizen-api-test
          EOF

  deploy-backoffice-test:
    needs: deploy-api-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy Backoffice Test via PM2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🧹 Killing old PM2 Backoffice test process"
            pm2 delete cesizen-backoffice-test || true

            echo "📁 Cloning/Updating repo for Backoffice"
            cd ~/cesizen-test || git clone -b test https://github.com/${{ github.repository }} ~/cesizen-test && cd ~/cesizen-test
            git pull origin test

            echo "📦 Installing Backoffice deps"
            cd BACKOFFICE
            npm install --legacy-peer-deps
            npm run build

            echo "🚀 Starting Backoffice test with PM2"
            VITE_API_URL=http://localhost:3001/api pm2 start "npx vite preview --host --port 4175" --name cesizen-backoffice-test
          EOF

  deploy-app-test:
    needs: deploy-backoffice-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy App Test via PM2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🧹 Killing old PM2 App test process"
            pm2 delete cesizen-app-test || true

            echo "🔍 Killing process on port 8082 (if any)"
            PID=\$(lsof -t -i:8082 || true)
            if [ ! -z "\$PID" ]; then
              echo "🔪 Killing process \$PID on port 8082"
              kill -9 \$PID
            fi

            echo "📁 Cloning/Updating repo for App"
            cd ~/cesizen-test || git clone -b test https://github.com/${{ github.repository }} ~/cesizen-test && cd ~/cesizen-test
            git pull origin test

            echo "📦 Installing App deps"
            cd APP
            npm install --legacy-peer-deps
            npx expo export --platform web --output-dir dist

            echo "🚀 Starting App test with PM2 (NGINX)"
            pm2 serve dist 8082 --spa --name cesizen-app-test
          EOF

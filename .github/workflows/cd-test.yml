name: CD for Test CESIZEN

on:
  push:
    branches: [test]

jobs:
  deploy-db-test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy Postgres Test DB on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            docker volume create cesizen-db-test || true
            docker stop cesizen-postgres-test || true
            docker rm cesizen-postgres-test || true
            docker run -d \
              --name cesizen-postgres-test \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=postgres \
              -e POSTGRES_DB=cesizen_test \
              -v cesizen-db-test:/var/lib/postgresql/data \
              -p 5433:5432 \
              postgres:15
            sleep 10
          EOF

  deploy-api-test:
    needs: deploy-db-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Build and Deploy API on EC2 with PM2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/cesizen-test || (git clone -b test https://github.com/${{ github.repository }} cesizen-test && cd cesizen-test)
            git pull origin test
            cd API && npm install && npx prisma generate && \
            DATABASE_URL="postgresql://postgres:postgres@localhost:5433/cesizen_test" JWT_SECRET=test-secret npx prisma migrate deploy && \
            npm run build && \
            pm2 delete cesizen-api-test || true && \
            DATABASE_URL="postgresql://postgres:postgres@localhost:5433/cesizen_test" JWT_SECRET=test-secret pm2 start dist/server.js --name cesizen-api-test
          EOF

  deploy-backoffice-test:
    needs: deploy-api-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Build and Deploy Backoffice on EC2 with PM2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/cesizen-test/BACKOFFICE
            npm install
            npm run build
            pm2 delete cesizen-backoffice-test || true
            VITE_API_URL="http://localhost:3001/api" pm2 start "npx vite preview --port 4175" --name cesizen-backoffice-test
          EOF

  deploy-app-test:
    needs: deploy-backoffice-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Build and Deploy App on EC2 via NGINX
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/cesizen-test/APP
            npm install
            npx expo export --platform web --output-dir dist
            docker stop cesizen-app-test || true
            docker rm cesizen-app-test || true
            docker run -d \
              --name cesizen-app-test \
              -p 8082:80 \
              -v $(pwd)/dist:/usr/share/nginx/html:ro \
              nginx:alpine
          EOF

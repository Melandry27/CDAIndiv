name: cd test

on:
  push:
    branches: [test]

jobs:
  deploy-db-test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy Postgres Test DB on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "📦 Creating test DB volume"
            docker volume create cesizen-db-test || true

            echo "🛑 Restarting test Postgres..."
            docker stop cesizen-postgres-test || true
            docker rm cesizen-postgres-test || true

            echo "🐘 Starting test Postgres..."
            docker run -d \
              --name cesizen-postgres-test \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=postgres \
              -e POSTGRES_DB=cesizen_test \
              -v cesizen-db-test:/var/lib/postgresql/data \
              -p 5433:5432 \
              postgres:15

            echo "🕐 Waiting for Postgres test DB..."
            sleep 10
          EOF

  kill-pm2-test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Kill PM2 on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🛑 Killing PM2 processes..."
            echo "🧹 Nettoyage des processus PM2 de test..."
            pm2 delete cesizen-api-test || true
            pm2 delete cesizen-backoffice-test || true
            pm2 delete cesizen-app-test || true
          EOF

  deploy-api-test:
    needs: deploy-db-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy API Test on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "📥 Pulling API test image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-api:latest

            echo "🛠 Running Prisma Migrate on test DB..."
            docker run --rm \
              --network host \
              -e DATABASE_URL=postgresql://postgres:postgres@localhost:5433/cesizen_test \
              -e JWT_SECRET=test-secret \
              ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-api:latest \
              npx prisma migrate deploy

            echo "🚀 Starting API test container..."
            docker stop cesizen-api-test || true
            docker rm cesizen-api-test || true
            docker run -d \
              --name cesizen-api-test \
              -p 3001:3000 \
              -e DATABASE_URL=postgresql://postgres:postgres@localhost:5433/cesizen_test \
              -e JWT_SECRET=test-secret \
              ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-api:latest
          EOF

  deploy-backoffice-test:
    needs: deploy-api-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy Backoffice Test on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "📥 Pulling backoffice test image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-backoffice:latest

            echo "🚀 Starting backoffice test container..."
            docker stop cesizen-backoffice-test || true
            docker rm cesizen-backoffice-test || true
            docker run -d \
              --name cesizen-backoffice-test \
              -p 4175:4173 \
              -e VITE_API_URL=http://localhost:3001/api \
              ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-backoffice:latest
          EOF

  deploy-app-test:
    needs: deploy-backoffice-test
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy App Test on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "📥 Pulling app test image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-app:latest

            echo "🚀 Starting app test container..."
            docker stop cesizen-app-test || true
            docker rm cesizen-app-test || true
            docker run -d \
              --name cesizen-app-test \
              -p 8082:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/cesizen-app:latest

            echo "✅ Test deployment complete"
          EOF

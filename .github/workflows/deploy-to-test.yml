name: Deploy to Test Environment

on:
  push:
    branches: [test]

jobs:
  deploy-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cesizen
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ§± Build images via Dockerfile.test
      - name: Build API test image
        run: docker build -f API/Dockerfile.test -t cesizen-api:test ./API

      - name: Build Backoffice test image
        run: docker build -f BACKOFFICE/Dockerfile.test -t cesizen-backoffice:test ./BACKOFFICE

      - name: Build App test image
        run: docker build -f APP/Dockerfile.test -t cesizen-app:test ./APP

      # ðŸ“¦ Migrations
      - name: Run Prisma Migrate Deploy
        run: |
          docker run --rm \
            --network host \
            -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/cesizen \
            -e JWT_SECRET=test-secret \
            cesizen-api:test \
            npx prisma migrate deploy

      # ðŸš€ Lancer les containers
      - name: Run API container
        run: |
          docker run -d \
          --name cesizen-api-test \
          -p 3000:3000 \
          -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/cesizen \
          -e JWT_SECRET=test-secret \
          cesizen-api:test

      - name: Run Backoffice container
        run: |
          docker run -d \
            --name cesizen-backoffice-test \
            -p 4174:4173 \
            -e VITE_API_URL=http://localhost:3000/api \
            cesizen-backoffice:test

      - name: Run App container
        run: |
          docker run -d \
            --name cesizen-app-test \
            -p 8081:80 \
            cesizen-app:test

      # âœ… VÃ©rification
      - name: Check API Health
        run: |
          echo "âŒ› Waiting for API..."
          sleep 10
          curl -f http://localhost:3000/api/health || exit 1

      - name: Done
        run: echo "âœ… Test environment ready!"

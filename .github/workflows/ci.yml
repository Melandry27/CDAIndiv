name: CI Pipeline CESIZen

on:
  push:
    branches: [main, preprod]
  pull_request:
    branches: [main, preprod]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  test-api:
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cesizen_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Build API Docker image for testing
        run: docker build -f API/Dockerfile.test -t cesizen-api-test ./API

      - name: Run tests in Docker
        run: |
          docker run --rm \
            -e DATABASE_URL=postgresql://postgres:postgres@host.docker.internal:5432/cesizen_test?schema=public \
            cesizen-api-test npm run test

  lint-backoffice:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Lint backoffice in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/BACKOFFICE:/app node:18 bash -c "cd /app && npm install --legacy-peer-deps && npm run lint"

  build-backoffice:
    runs-on: ubuntu-latest
    needs: lint-backoffice
    steps:
      - uses: actions/checkout@v4

      - name: Build backoffice in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/BACKOFFICE:/app node:18 bash -c "cd /app && npm install --legacy-peer-deps && npm run build"

  lint-app:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Lint mobile app in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/APP:/app node:18 bash -c "cd /app && npm install && npm run lint || npx expo lint"

  build-app:
    runs-on: ubuntu-latest
    needs: lint-app
    steps:
      - uses: actions/checkout@v4

      - name: Build Expo Web in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/APP:/app node:18 bash -c "cd /app && npm install && npx expo export --platform web"

      - name: Upload Expo Web artifact
        uses: actions/upload-artifact@v4
        with:
          name: expo-web-build
          path: APP/dist

name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd /home/ubuntu

            if [ ! -d "CDAIndiv/.git" ]; then
              echo "üì• Cloning repository into CDAIndiv..."
              rm -rf CDAIndiv
              git clone https://github.com/melandry27/CDAIndiv.git CDAIndiv
            else
              echo "üîÅ Pulling latest changes in CDAIndiv..."
              git -C CDAIndiv pull origin main
            fi

            cd CDAIndiv

            echo "üîß Installing Node.js and npm if not present..."
            command -v npm >/dev/null 2>&1 || curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - && sudo apt-get install -y nodejs

            echo "üì¶ Installing dependencies and building API..."
            if [ -d "API" ]; then
              cd API

              echo "üîê Injecting .env file for API..."
              cat <<EOT > .env
              JWT_SECRET=${{ secrets.JWT_SECRET }}
              PORT=3000
              DATABASE_URL=${{ secrets.DATABASE_URL }}
            EOT

              npm install || echo "‚ùå npm install √©chou√© pour API"
              npm run build || echo "‚ùå build √©chou√© pour API"
              cd ..
            else
              echo "‚ùå Dossier API introuvable"
            fi

            echo "üì¶ Installing dependencies and building BACKOFFICE..."
            if [ -d "BACKOFFICE" ]; then
              cd BACKOFFICE

              echo "üåç Injecting .env file for BACKOFFICE..."
              echo "VITE_API_URL=http://34.224.12.85:3000/api" > .env

              npm install --legacy-peer-deps || echo "‚ùå npm install √©chou√© pour BACKOFFICE"
              npm run build --silent || echo "‚ùå build √©chou√© pour BACKOFFICE"
              cd ..
            else
              echo "‚ùå Dossier BACKOFFICE introuvable"
            fi

            echo "üöÄ Ensuring PM2 is available..."
            command -v pm2 >/dev/null 2>&1 || sudo npm install -g pm2

            echo "üîÑ Restarting apps with PM2..."
            pm2 stop all || true

            if [ -d "API" ]; then
              cd API
              pm2 start dist/server.js --name cesizen-api || echo "‚ùå Impossible de lancer API avec PM2"
              cd ..
            fi

            if [ -d "BACKOFFICE" ]; then
              cd BACKOFFICE
              pm2 start npx --name cesizen-back -- vite preview --port 4173 --host || echo "‚ùå Impossible de lancer BACKOFFICE avec PM2"
              cd ..
            fi

            echo "üìä Listing des process PM2 :"
            pm2 list

            echo "‚úÖ Deploy complete"
          EOF
